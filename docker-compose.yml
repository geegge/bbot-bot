version: "2"

services:
  redis:
    image: "redis:5.0.7"

  rocketchat:
    image: rocketchat/rocket.chat:2.4.0
    command: >
      bash -c
        "for i in `seq 1 30`; do
          node main.js &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    volumes:
      - ./uploads:/app/uploads
    env_file: .env
    depends_on:
      - mongo
    ports:
      - 3000:3000

  mongo:
    image: mongo:4.0
    restart: unless-stopped
    volumes:
      - ./data/db:/data/db
      #- ./data/dump:/dump
    command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1

  # this container's job is just run the command to initialize the replica set.
  # it will run the command and remove himself (it will not stay running)
  mongo-init-replica:
    image: mongo:4.0
    command: >
      bash -c
        "for i in `seq 1 30`; do
          mongo mongo/rocketchat --eval \"
            rs.initiate({
              _id: 'rs0',
              members: [ { _id: 0, host: 'localhost:27017' } ]})\" &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    depends_on:
      - mongo

  bbot-bot:
    build:
      dockerfile: Dockerfile.dev
      context: .
    restart: unless-stopped
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    env_file: .env
    depends_on:
      - rocketchat
    command: npm run chat:${NODE_ENV}
